{"version":3,"sources":["ThreeJSManager/Canvas.js","ThreeJSManager/useAnimationFrame.js","ThreeJSManager/ThreeJSManager.js","ThreeJSManager/useThree.js","ThreeJSManager/index.js","example/Cube.js","example/Grid.js","example/CameraControls.js","example/threeSetup.js","App.js","index.js"],"names":["forwardRef","_","ref","onWindowResize","current","setAttribute","useEffect","window","addEventListener","removeEventListener","react_default","a","createElement","style","zIndex","position","height","width","useAnimationFrame","callback","callbackRef","useRef","useMutationEffect","loop","time","frameRef","requestAnimationFrame","cb","useLayoutEffect","cancelAnimationFrame","ThreeJSContext","createContext","ThreeJSManager","_ref","children","getCamera","getRenderer","getScene","_useState","useState","_useState2","Object","slicedToArray","threeIsReady","setThreeIsReady","_useState3","_useState4","timer","updateTimer","canvasRef","sceneRef","cameraRef","rendererRef","_canvasRef$current","offsetWidth","offsetHeight","threeContext","scene","camera","canvas","aspect","updateProjectionMatrix","setSize","render","Fragment","ThreeJSManager_Canvas","Provider","value","useThree","setup","destroy","entityRef","context","useContext","getEntity","remove","objectSpread","Cube","props","_props$h","h","_props$w","w","_props$d","d","_props$color","color","_useThree","cubegeometry","THREE","cubematerial","cube","castShadow","y","add","material","setHex","oscillator","Math","sin","PI","rotation","z","Grid","grid","OrbitControls","OrbitControlsDefault","CameraControls","controls","enableDamping","dampingFactor","rotateSpeed","autoRotate","autoRotateSpeed","maxPolarAngle","enableKeys","update","set","getContext","renderer","setPixelRatio","devicePixelRatio","background","fog","light","planeGeometry","planeMaterial","plane","x","receiveShadow","App","changeColor","showGrid","toggleShowGrid","_useState5","_useState6","showCube","toggleShowCube","src_ThreeJSManager","example_Grid","example_Cube","Number","concat","example_CameraControls","padding","display","flexDirection","type","placeholder","onChange","e","target","checked","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a2701aba.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  forwardRef,\n  useEffect,\n} from 'react';\n\nconst Canvas = (_, ref) => {\n  const onWindowResize = () => {\n    ref.current.setAttribute(\n      'style',\n      'z-index: -1; position: absolute; height: 100%; width: 100%;',\n    );\n  };\n\n  useEffect(\n    () => {\n      window.addEventListener('resize', onWindowResize)\n      return () => {\n        window.removeEventListener('resize', onWindowResize)\n      }\n    },\n    [],\n  );\n\n  return (\n    <canvas\n      ref={ref}\n      style={{\n        zIndex: -1,\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n      }}\n    />\n  );\n}\n\nexport default forwardRef(Canvas);\n","import {\n  useRef,\n  useMutationEffect,\n  useLayoutEffect,\n} from 'react';\n\nconst useAnimationFrame = callback => {\n  const callbackRef = useRef(callback);\n  useMutationEffect(\n    () => {\n      callbackRef.current = callback;\n    },\n    [callback]\n  );\n\n  const loop = (time) => {\n    frameRef.current = requestAnimationFrame(\n      loop\n    );\n    const cb = callbackRef.current;\n    cb(time);\n  };\n\n  const frameRef = useRef();\n  useLayoutEffect(() => {\n    frameRef.current = requestAnimationFrame(\n      loop\n    );\n    return () =>\n      cancelAnimationFrame(frameRef.current);\n  }, []);\n};\n\nexport default useAnimationFrame;\n","import React from 'react';\nimport {\n  createContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport Canvas from './Canvas';\nimport useAnimationFrame from './useAnimationFrame';\n\nexport const ThreeJSContext = createContext();\n\nconst ThreeJSManager = ({ children, getCamera, getRenderer, getScene }) => {\n  const [threeIsReady, setThreeIsReady] = useState(false);\n  const [timer, updateTimer] = useState(0);\n  const canvasRef = useRef({});\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n\n  const {offsetWidth, offsetHeight } = canvasRef.current;\n  const threeContext = {\n    scene: sceneRef.current,\n    camera: cameraRef.current,\n    canvas: canvasRef.current,\n    timer,\n  };\n\n  // setup scene, camera, and renderer, and store references\n  useEffect(\n    () => {\n      const canvas = canvasRef.current;\n      sceneRef.current = getScene();\n      cameraRef.current = getCamera(canvas);\n      rendererRef.current = getRenderer(canvas);\n\n      setThreeIsReady(true);\n    },\n    [],\n  );\n\n  // update camera and renderer when dimensions change\n  useEffect(\n    () => {\n      cameraRef.current.aspect = offsetWidth / offsetHeight;\n      cameraRef.current.updateProjectionMatrix();\n      rendererRef.current.setSize(offsetWidth, offsetHeight);\n    },\n    [\n      offsetWidth,\n      offsetHeight,\n    ],\n  );\n\n  // set animation frame timer value and rerender the scene\n  useAnimationFrame(\n    (timer) => {\n      updateTimer(timer)\n      rendererRef.current.render(\n        sceneRef.current,\n        cameraRef.current,\n      );\n    }\n  )\n\n  return (\n    <>\n      <Canvas\n        ref={canvasRef}\n      />\n      {\n        threeIsReady &&\n          <ThreeJSContext.Provider\n            value={threeContext}\n          >\n            { children }\n          </ThreeJSContext.Provider>\n      }\n    </>\n  );\n}\n\nexport default ThreeJSManager;\n","import {\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport { ThreeJSContext } from './ThreeJSManager';\n\nconst useThree = (setup, destroy) => {\n  const entityRef = useRef();\n  const context = useContext(ThreeJSContext);\n\n  const getEntity = () => entityRef.current;\n\n  useEffect(\n    () => {\n      entityRef.current = setup(context);\n\n      return () => {\n        if (destroy) {\n          return destroy(context, getEntity());\n        }\n        context.scene.remove(getEntity());\n      };\n    },\n    [],\n  );\n\n  return {\n    getEntity,\n    ...context,\n  };\n}\n\nexport default useThree;\n","import ThreeJSManager from './ThreeJSManager';\nexport { default as useThree } from './useThree';\n\nexport default ThreeJSManager;\n","import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '../ThreeJSManager/';\n\nconst Cube = (props) => {\n  const { h = 50, w = 50, d = 50, color = 0x00ff00 } = props;\n\n  const setup = (context) => {\n    const { scene } = context;\n    const cubegeometry = new THREE.BoxGeometry( h, w, d );\n    const cubematerial = new THREE.MeshPhongMaterial( { color } );\n    const cube = new THREE.Mesh( cubegeometry, cubematerial );\n    cube.castShadow = true;\n    cube.position.y = 50;\n    scene.add(cube);\n\n    return cube;\n  }\n\n  const { getEntity, timer } = useThree(setup);\n\n  useEffect(\n    () => {\n      const cube = getEntity();\n      cube.material.color.setHex(props.color);\n    },\n    [props.color],\n  );\n\n  useEffect(\n    () => {\n      const cube = getEntity();\n      const oscillator = Math.sin(timer/1000) * Math.PI - Math.PI\n      cube.rotation.y = oscillator;\n      cube.rotation.z = -oscillator;\n    },\n    [timer],\n  );\n\n  return null;\n}\n\nexport default Cube;\n\n","import * as THREE from 'three';\nimport { useThree } from '../ThreeJSManager/';\n\nconst Grid = () => {\n  useThree(({ scene }) => {\n    const grid = new THREE.GridHelper(10000, 1000);\n    scene.add(grid);\n\n    return grid;\n  });\n\n  return null;\n};\n\nexport default Grid;\n","import * as THREE from 'three';\nimport OrbitControlsDefault from 'three-orbit-controls';\nimport { useThree } from '../ThreeJSManager/';\n\nconst OrbitControls = OrbitControlsDefault(THREE);\n\nconst CameraControls = () => {\n  useThree(({ camera, canvas }) => {\n    const controls = new OrbitControls(camera, canvas);\n\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.12;\n    controls.rotateSpeed = 0.08;\n    controls.autoRotate = true;\n    controls.autoRotateSpeed = 0.08;\n    controls.maxPolarAngle = Math.PI/2;\n    controls.enableKeys = false;\n    controls.update();\n  });\n\n  return null;\n}\n\nexport default CameraControls;","import * as THREE from 'three';\n\nexport const getCamera = ({ offsetWidth, offsetHeight }) => {\n  const camera = new THREE.PerspectiveCamera(75, offsetWidth/offsetHeight, 0.1, 1000);\n  camera.position.set(50, 150, 0)\n\n  return camera;\n};\n\nexport const getRenderer = (canvas) => {\n  const context = canvas.getContext('webgl');\n  const renderer = new THREE.WebGLRenderer({\n    canvas,\n    context,\n  });\n\n  renderer.setSize(canvas.offsetWidth, canvas.offsetHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  return renderer;\n};\n\nexport const getScene = () => {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xcccccc);\n  scene.fog = new THREE.FogExp2(0xcccccc, 0.002);\n\n  const light = new THREE.SpotLight(0xffffff, 1, 750, 1);\n  light.position.set(50, 200, 0)\n  light.rotation.z = 90 * Math.PI/180;\n  scene.add(light);\n\n  const planeGeometry = new THREE.PlaneBufferGeometry( 10000, 10000, 32, 32 );\n  const planeMaterial = new THREE.MeshPhongMaterial( { color: 0xcccccc } )\n  const plane = new THREE.Mesh( planeGeometry, planeMaterial );\n\n  plane.rotation.x = -90 * Math.PI/180;\n  plane.receiveShadow = true;\n  scene.add( plane );\n\n  return scene;\n}\n","import React, { useState } from 'react';\nimport SceneManager from './ThreeJSManager';\nimport Cube from './example/Cube';\nimport Grid from './example/Grid';\nimport CameraControls from './example/CameraControls';\nimport {\n  getCamera,\n  getRenderer,\n  getScene,\n} from './example/threeSetup';\n\nfunction App() {\n  const [color, changeColor] = useState('0000ff');\n  const [showGrid, toggleShowGrid] = useState(true);\n  const [showCube, toggleShowCube] = useState(true);\n\n  return (\n    <>\n      <SceneManager\n        getCamera={getCamera}\n        getRenderer={getRenderer}\n        getScene={getScene}\n      >\n        {\n          showGrid &&\n          <Grid />\n        }\n        {\n          showCube &&\n            <Cube\n              color={Number(`0x${color}`)}\n            />\n          }\n        <CameraControls />\n      </SceneManager>\n\n      <div\n        style={{\n          width: '100px',\n          padding: '10px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <input\n            type='text'\n            placeholder='enter a hex color'\n            onChange={(e) =>\n              changeColor(e.target.value)\n            }\n          />\n\n          <label>\n            <input\n              type='checkbox'\n              checked={showGrid}\n              onChange={() => toggleShowGrid(!showGrid)}\n            />\n            show grid\n          </label>\n\n          <label>\n            <input\n              type='checkbox'\n              checked={showCube}\n              onChange={() => toggleShowCube(!showCube)}\n            />\n            show cube\n          </label>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}