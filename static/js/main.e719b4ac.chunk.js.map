{"version":3,"sources":["ThreeJSManager/Canvas.js","ThreeJSManager/useAnimationFrame.js","ThreeJSManager/ThreeJSManager.js","ThreeJSManager/useThree.js","ThreeJSManager/index.js","example-cube/Cube.js","example-cube/Grid.js","example-cube/CameraControls.js","example-cube/threeSetup.js","example-cube/CubeExample.js","example-asteroids/hooks/useSpaceshipControl.js","example-asteroids/Spaceship.js","example-asteroids/Asteroid.js","example-asteroids/Laserbeam.js","example-asteroids/hooks/useAsteroidsGame/useAsteroidsGameUtil.js","example-asteroids/hooks/useAsteroidsGame/index.js","example-asteroids/hooks/useAsteroidsGame/useAsteroidsGame.js","example-asteroids/threeSetup.js","example-asteroids/GameContainer.js","App.js","index.js"],"names":["forwardRef","_","ref","onWindowResize","current","setAttribute","useEffect","window","addEventListener","removeEventListener","react_default","a","createElement","style","zIndex","position","height","width","useAnimationFrame","callback","callbackRef","useRef","useMutationEffect","loop","time","frameRef","requestAnimationFrame","cb","useLayoutEffect","cancelAnimationFrame","ThreeJSContext","createContext","ThreeJSManager","_ref","children","getCamera","getRenderer","getScene","_useState","useState","_useState2","Object","slicedToArray","threeIsReady","setThreeIsReady","_useState3","_useState4","timer","updateTimer","canvasRef","sceneRef","cameraRef","rendererRef","_canvasRef$current","offsetWidth","offsetHeight","threeContext","scene","camera","canvas","aspect","updateProjectionMatrix","setSize","render","Fragment","ThreeJSManager_Canvas","Provider","value","noop","useThree","setup","arguments","length","undefined","destroy","entityRef","context","useContext","getEntity","remove","objectSpread","Cube","props","_props$h","h","_props$w","w","_props$d","d","_props$color","color","_useThree","cubegeometry","THREE","cubematerial","cube","castShadow","y","add","material","setHex","oscillator","Math","sin","PI","rotation","z","Grid","grid","OrbitControls","OrbitControlsDefault","CameraControls","controls","enableDamping","dampingFactor","rotateSpeed","autoRotate","autoRotateSpeed","maxPolarAngle","enableKeys","update","set","getContext","renderer","setPixelRatio","devicePixelRatio","background","fog","light","planeGeometry","planeMaterial","plane","x","receiveShadow","CubeExample","changeColor","showGrid","toggleShowGrid","_useState5","_useState6","showCube","toggleShowCube","src_ThreeJSManager","example_cube_CameraControls","example_cube_Grid","example_cube_Cube","Number","concat","padding","display","flexDirection","type","placeholder","onChange","e","target","checked","useSpaceshipControl","turnSpeed","handleControlKey","event","direction","keyCode","getDirection","rotationChange","Spaceship","shootLaser","_ref2","geometry","spaceshipGroup","vertices","push","spaceship","setFromObject","getCenter","multiplyScalar","_ref3","_ref4","handleSpacebar","_getEntity$spaceship","matrixWorld","center","worldPosition","copy","applyMatrix4","worldCenter","normalize","Asteroid","radius","uuid","i","vertex","randomX","random","randomY","cos","asteroid","userData","gameUuid","isAsteroid","Laserbeam","line","atan2","raycaster","far","divideAsteroid","box","Array","fill","map","createAsteroidGeometry","clone","_ref4$radius","xRange","max","min","yRange","generateUUID","advanceAsteroids","asteroids","containsPoint","useAsteroidsGame","count","asteroidCount","boundingBoxRef","top","left","bottom","right","makeBoundingBoxFromCamera","_useReducer","useReducer","state","action","laserbeams","toConsumableArray","_ref5","generateLaserbeam","_proceedGame","boundingBox","newAsteroids","newLaserbeams","asteroidsMap","reduce","memo","forEach","laserbeam","hit","intersections","intersectObjects","hitAsteroid","find","object","gameAsteroid","apply","movedAsteroids","values","proceedGame","_useReducer2","_useReducer2$","dispatch","aspectRatio","viewSize","Game","_ref$asteroidCount","_useAsteroidsGame","example_asteroids_Spaceship","example_asteroids_Asteroid","assign","key","example_asteroids_Laserbeam","GameContainer","GameContainer_Game","App","BrowserRouter","basename","Route","exact","path","className","Link","to","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e719b4ac.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  forwardRef,\n  useEffect,\n} from 'react';\n\nconst Canvas = (_, ref) => {\n  const onWindowResize = () => {\n    ref.current.setAttribute(\n      'style',\n      'z-index: -1; position: absolute; height: 100%; width: 100%;',\n    );\n  };\n\n  useEffect(\n    () => {\n      window.addEventListener('resize', onWindowResize)\n      return () => {\n        window.removeEventListener('resize', onWindowResize)\n      }\n    },\n    [],\n  );\n\n  return (\n    <canvas\n      ref={ref}\n      style={{\n        zIndex: -1,\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n      }}\n    />\n  );\n}\n\nexport default forwardRef(Canvas);\n","import {\n  useRef,\n  useMutationEffect,\n  useLayoutEffect,\n} from 'react';\n\nconst useAnimationFrame = callback => {\n  const callbackRef = useRef(callback);\n  useMutationEffect(\n    () => {\n      callbackRef.current = callback;\n    },\n    [callback]\n  );\n\n  const loop = (time) => {\n    frameRef.current = requestAnimationFrame(\n      loop\n    );\n    const cb = callbackRef.current;\n    cb(time);\n  };\n\n  const frameRef = useRef();\n  useLayoutEffect(() => {\n    frameRef.current = requestAnimationFrame(\n      loop\n    );\n    return () =>\n      cancelAnimationFrame(frameRef.current);\n  }, []);\n};\n\nexport default useAnimationFrame;\n","import React from 'react';\nimport {\n  createContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport Canvas from './Canvas';\nimport useAnimationFrame from './useAnimationFrame';\n\nexport const ThreeJSContext = createContext();\n\nconst ThreeJSManager = ({ children, getCamera, getRenderer, getScene }) => {\n  const [threeIsReady, setThreeIsReady] = useState(false);\n  const [timer, updateTimer] = useState(0);\n  const canvasRef = useRef({});\n  const sceneRef = useRef();\n  const cameraRef = useRef();\n  const rendererRef = useRef();\n\n  const {offsetWidth, offsetHeight } = canvasRef.current;\n  const threeContext = {\n    scene: sceneRef.current,\n    camera: cameraRef.current,\n    canvas: canvasRef.current,\n    timer,\n  };\n\n  // setup scene, camera, and renderer, and store references\n  useEffect(\n    () => {\n      const canvas = canvasRef.current;\n      sceneRef.current = getScene();\n      cameraRef.current = getCamera(canvas);\n      rendererRef.current = getRenderer(canvas);\n\n      setThreeIsReady(true);\n    },\n    [],\n  );\n\n  // update camera and renderer when dimensions change\n  useEffect(\n    () => {\n      cameraRef.current.aspect = offsetWidth / offsetHeight;\n      cameraRef.current.updateProjectionMatrix();\n      rendererRef.current.setSize(offsetWidth, offsetHeight);\n    },\n    [\n      offsetWidth,\n      offsetHeight,\n    ],\n  );\n\n  // set animation frame timer value and rerender the scene\n  useAnimationFrame(\n    (timer) => {\n      updateTimer(timer)\n      rendererRef.current.render(\n        sceneRef.current,\n        cameraRef.current,\n      );\n    }\n  )\n\n  return (\n    <>\n      <Canvas\n        ref={canvasRef}\n      />\n      {\n        threeIsReady &&\n          <ThreeJSContext.Provider\n            value={threeContext}\n          >\n            { children }\n          </ThreeJSContext.Provider>\n      }\n    </>\n  );\n}\n\nexport default ThreeJSManager;\n","import {\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport { ThreeJSContext } from './ThreeJSManager';\n\nconst noop = () => {};\n\nconst useThree = (setup = noop, destroy) => {\n  const entityRef = useRef();\n  const context = useContext(ThreeJSContext);\n\n  const getEntity = () => entityRef.current;\n\n  useEffect(\n    () => {\n      entityRef.current = setup(context);\n\n      return () => {\n        if (destroy) {\n          return destroy(context, getEntity());\n        }\n        context.scene.remove(getEntity());\n      };\n    },\n    [],\n  );\n\n  return {\n    getEntity,\n    ...context,\n  };\n}\n\nexport default useThree;\n","import ThreeJSManager from './ThreeJSManager';\nexport { default as useThree } from './useThree';\n\nexport default ThreeJSManager;\n","import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '../ThreeJSManager/';\n\nconst Cube = (props) => {\n  const { h = 50, w = 50, d = 50, color = 0x00ff00 } = props;\n\n  const setup = (context) => {\n    const { scene } = context;\n    const cubegeometry = new THREE.BoxGeometry( h, w, d );\n    const cubematerial = new THREE.MeshPhongMaterial( { color } );\n    const cube = new THREE.Mesh( cubegeometry, cubematerial );\n    cube.castShadow = true;\n    cube.position.y = 50;\n    scene.add(cube);\n\n    return cube;\n  }\n\n  const { getEntity, timer } = useThree(setup);\n\n  useEffect(\n    () => {\n      const cube = getEntity();\n      cube.material.color.setHex(props.color);\n    },\n    [props.color],\n  );\n\n  useEffect(\n    () => {\n      const cube = getEntity();\n      const oscillator = Math.sin(timer/1000) * Math.PI - Math.PI\n      cube.rotation.y = oscillator;\n      cube.rotation.z = -oscillator;\n    },\n    [timer],\n  );\n\n  return null;\n}\n\nexport default Cube;\n\n","import * as THREE from 'three';\nimport { useThree } from '../ThreeJSManager/';\n\nconst Grid = () => {\n  useThree(({ scene }) => {\n    const grid = new THREE.GridHelper(10000, 1000);\n    scene.add(grid);\n\n    return grid;\n  });\n\n  return null;\n};\n\nexport default Grid;\n","import * as THREE from 'three';\nimport OrbitControlsDefault from 'three-orbit-controls';\nimport { useThree } from '../ThreeJSManager/';\n\nconst OrbitControls = OrbitControlsDefault(THREE);\n\nconst CameraControls = () => {\n  useThree(({ camera, canvas }) => {\n    const controls = new OrbitControls(camera, canvas);\n\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.12;\n    controls.rotateSpeed = 0.08;\n    controls.autoRotate = true;\n    controls.autoRotateSpeed = 0.08;\n    controls.maxPolarAngle = Math.PI/2;\n    controls.enableKeys = false;\n    controls.update();\n  });\n\n  return null;\n}\n\nexport default CameraControls;","import * as THREE from 'three';\n\nexport const getCamera = ({ offsetWidth, offsetHeight }) => {\n  const camera = new THREE.PerspectiveCamera(75, offsetWidth/offsetHeight, 0.1, 1000);\n  camera.position.set(50, 150, 0)\n\n  return camera;\n};\n\nexport const getRenderer = (canvas) => {\n  const context = canvas.getContext('webgl');\n  const renderer = new THREE.WebGLRenderer({\n    canvas,\n    context,\n  });\n\n  renderer.setSize(canvas.offsetWidth, canvas.offsetHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  return renderer;\n};\n\nexport const getScene = () => {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xcccccc);\n  scene.fog = new THREE.FogExp2(0xcccccc, 0.002);\n\n  const light = new THREE.SpotLight(0xffffff, 1, 750, 1);\n  light.position.set(50, 200, 0)\n  light.rotation.z = 90 * Math.PI/180;\n  scene.add(light);\n\n  const planeGeometry = new THREE.PlaneBufferGeometry( 10000, 10000, 32, 32 );\n  const planeMaterial = new THREE.MeshPhongMaterial( { color: 0xcccccc } )\n  const plane = new THREE.Mesh( planeGeometry, planeMaterial );\n\n  plane.rotation.x = -90 * Math.PI/180;\n  plane.receiveShadow = true;\n  scene.add( plane );\n\n  return scene;\n}\n","import React, { useState } from 'react';\nimport SceneManager from '../ThreeJSManager';\nimport Cube from './Cube';\nimport Grid from './Grid';\nimport CameraControls from './CameraControls';\nimport {\n  getCamera,\n  getRenderer,\n  getScene,\n} from './threeSetup';\n\nconst CubeExample = () => {\n  const [color, changeColor] = useState('0000ff');\n  const [showGrid, toggleShowGrid] = useState(true);\n  const [showCube, toggleShowCube] = useState(true);\n\n  return (\n    <SceneManager\n      getCamera={getCamera}\n      getRenderer={getRenderer}\n      getScene={getScene}\n    >\n      <CameraControls />\n      {\n        showGrid &&\n          <Grid />\n      }\n      {\n        showCube &&\n          <Cube\n            color={Number(`0x${color}`)}\n          />\n      }\n      <div\n        style={{\n          width: '100px',\n          padding: '10px',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <input\n            type='text'\n            placeholder='enter a hex color'\n            onChange={(e) =>\n              changeColor(e.target.value)\n            }\n          />\n\n          <label>\n            <input\n              type='checkbox'\n              checked={showGrid}\n              onChange={() => toggleShowGrid(!showGrid)}\n            />\n            show grid\n          </label>\n\n          <label>\n            <input\n              type='checkbox'\n              checked={showCube}\n              onChange={() => toggleShowCube(!showCube)}\n            />\n            show cube\n          </label>\n        </div>\n      </div>\n    </SceneManager>\n  )\n}\n\nexport default CubeExample;\n","import { useEffect, useRef } from 'react';\n\nconst LEFT_ARROW_KEYCODE = 37;\nconst RIGHT_ARROW_KEYCODE = 39;\n\nconst useSpaceshipControl = ({ turnSpeed }) => {\n  const rotation = useRef(0);\n\n  const getDirection = (event) => {\n    switch (event.keyCode) {\n      case LEFT_ARROW_KEYCODE:\n        return 1;\n      case RIGHT_ARROW_KEYCODE:\n        return -1;\n      default:\n    }\n  }\n\n  const handleControlKey = (event) => {\n    const direction = getDirection(event);\n\n    if (direction) {\n      const rotationChange = turnSpeed * direction * Math.PI/180;\n      rotation.current += rotationChange;\n    }\n  }\n\n  useEffect(\n    () => {\n      window.addEventListener('keydown', handleControlKey);\n\n      return () => {\n        window.removeEventListener('keydown', handleControlKey);\n      };\n    },\n    [],\n  );\n\n  return rotation.current;\n}\n\nexport default useSpaceshipControl;\n","import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '../ThreeJSManager/';\nimport useSpaceshipControl from './hooks/useSpaceshipControl';\n\nconst SPACEBAR_KEY_CODE = 32;\n\nconst Spaceship = ({ shootLaser }) => {\n  const { getEntity } = useThree(\n    ({ scene }) => {\n      const material = new THREE.LineBasicMaterial({ color: 0xFFFFFF });\n      const geometry = new THREE.Geometry();\n      const spaceshipGroup = new THREE.Group();\n      \n      geometry.vertices.push(\n        new THREE.Vector3(0, 10, 0),\n        new THREE.Vector3(-5, 0, 0),\n        new THREE.Vector3(0, 2.5, 0),\n        new THREE.Vector3(5, 0, 0),\n        new THREE.Vector3(0, 10, 0),\n      );\n        \n      const spaceship = new THREE.Line( geometry, material );\n      const box = new THREE.Box3().setFromObject(spaceship);\n    \n      box.getCenter(spaceship.position);\n      spaceship.position.multiplyScalar(-1);\n      spaceshipGroup.position.y = -50\n      spaceshipGroup.add(spaceship);\n      scene.add(spaceshipGroup);\n    \n      return {\n        spaceshipGroup,\n        spaceship,\n      };\n    },\n    ({ scene }, { spaceshipGroup })  => scene.remove(spaceshipGroup),\n  );\n\n  const handleSpacebar = (event) => {\n    if (event.keyCode !== SPACEBAR_KEY_CODE) return;\n\n    const { spaceship: { geometry, matrixWorld } } = getEntity();\n    const position = geometry.vertices[0];\n    const center = geometry.vertices[2];\n  \n    const worldPosition = new THREE.Vector3().copy(position).applyMatrix4(matrixWorld);\n    const worldCenter = new THREE.Vector3().copy(center).applyMatrix4(matrixWorld);\n    const direction = new THREE.Vector3(\n      worldPosition.x - worldCenter.x,\n      worldPosition.y - worldCenter.y,\n      0,\n    ).normalize();\n\n    shootLaser(worldPosition, direction);\n  }\n\n  useEffect(\n    () => {\n      window.addEventListener('keydown', handleSpacebar);\n\n      return () => {\n        window.removeEventListener('keydown', handleSpacebar);\n      };\n    },\n    [],\n  );\n  \n  const rotation = useSpaceshipControl({ turnSpeed: 6 });\n\n  useEffect(\n    () => {\n      const { spaceshipGroup } = getEntity();\n      spaceshipGroup.rotation.z = rotation;\n    },\n    [rotation],\n  );\n\n  return null;\n}\n\nexport default Spaceship;\n","import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '../ThreeJSManager';\n\nconst ASTEROID_SEGMENTS = 16;\n\nconst Asteroid = ({ position, rotation, radius, uuid }) => {\n  const { getEntity } = useThree(\n    ({ scene }) => {\n      const material = new THREE.LineBasicMaterial({ color: 0xFFFFFF });\n      const geometry = new THREE.Geometry();\n\n      for (let i = 0; i <= ASTEROID_SEGMENTS; i++) {\n        const vertex = new THREE.Vector3()\n        const randomX = Math.random() * (radius/2) - (radius/2);\n        const randomY = Math.random() * (radius/2) - (radius/2);\n    \n        vertex.set(\n          radius * Math.sin(i * 2*Math.PI / ASTEROID_SEGMENTS) + randomX,\n          radius * Math.cos(i * 2*Math.PI / ASTEROID_SEGMENTS) + randomY,\n          0,\n        );\n    \n        if (i === ASTEROID_SEGMENTS) {\n          geometry.vertices.push(geometry.vertices[0]);\n        } else {\n          geometry.vertices.push(vertex);\n        }\n      };\n\n      const asteroid = new THREE.Line(geometry, material);\n      asteroid.userData.gameUuid = uuid;\n      asteroid.userData.isAsteroid = true;\n      scene.add(asteroid);\n      \n      return asteroid;\n    }\n  );\n\n    useEffect(\n      () => {\n        const asteroid = getEntity();\n        asteroid.position.x = position.x;\n        asteroid.position.y = position.y;\n        asteroid.rotation.z = rotation.z;\n      },\n      [\n        position.x,\n        position.y,\n        rotation.z,\n      ]\n    );\n\n  return null;\n}\n\nexport default Asteroid;\n","import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '../ThreeJSManager';\n\nconst Laserbeam = ({ position, direction }) => {\n  const { getEntity } = useThree(({ scene }) => {\n    const material = new THREE.LineBasicMaterial({ color: 0xFFFFFF });\n    const geometry = new THREE.Geometry();\n    \n    geometry.vertices.push(\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(1, 0, 0),\n    );\n\n    const line = new THREE.Line(geometry, material);\n    line.position.x = position.x\n    line.position.y = position.y\n    line.rotation.z = Math.atan2(direction.y, direction.x);\n\n    scene.add(line);\n\n    return line;\n  });\n\n  useEffect(\n    () => {\n      const line = getEntity();\n      line.position.x = position.x\n      line.position.y = position.y\n    },\n    [\n      position.x, \n      position.y\n    ],\n  );\n\n  return null;\n};\n\nexport default Laserbeam;\n","import * as THREE from 'three';\n\nconst raycaster = new THREE.Raycaster();\nraycaster.far = 0.1\n\nconst DEFAULT_ASTEROID_RADIUS = 12;\n\nexport const proceedGame = ({ laserbeams, asteroids, scene, boundingBox }) => {\n  const newAsteroids = [];\n  const newLaserbeams = [];\n  const asteroidsMap = asteroids.reduce((memo, asteroid) => {\n    memo[asteroid.uuid] = asteroid;\n    return memo;\n  }, {});\n\n  laserbeams.forEach(laserbeam => {\n    let hit = false;\n    raycaster.set(laserbeam.position, laserbeam.direction);\n    const intersections = raycaster.intersectObjects(scene.children);\n\n    if (intersections.length) {\n      const hitAsteroid = intersections.find(({ object: { userData }}) => userData.isAsteroid);\n      const gameAsteroid = hitAsteroid && asteroidsMap[hitAsteroid.object.userData.gameUuid];\n\n      if (gameAsteroid) {\n        delete asteroidsMap[gameAsteroid.uuid];\n        hit = true;\n        if (gameAsteroid.radius > 1) {\n          newAsteroids.push(...divideAsteroid(gameAsteroid, boundingBox));\n        }\n      }\n    }\n\n    laserbeam.position.add(laserbeam.direction);\n    if (!hit && boundingBox.containsPoint(laserbeam.position)) {\n      newLaserbeams.push(laserbeam);\n    }\n  })\n\n  const movedAsteroids = advanceAsteroids(boundingBox, Object.values(asteroidsMap));\n\n  return {\n    asteroids: newAsteroids.concat(movedAsteroids),\n    laserbeams: newLaserbeams,\n  }\n}\n\nconst divideAsteroid = ({ position, radius }, box) =>\n  Array(4)\n    .fill()\n    .map(() => ({\n      ...createAsteroidGeometry({ radius: radius/2, box }),\n      position: position.clone(),\n    }))\n\nconst createAsteroidGeometry = ({ box, radius = DEFAULT_ASTEROID_RADIUS }) => {\n  const xRange = box.max.x - box.min.x;\n  const yRange = box.max.y - box.min.y;\n\n  const direction = new THREE.Vector3(\n    Math.random() - 0.5,\n    Math.random() - 0.5,\n    0,\n  );\n\n  const position = new THREE.Vector3(\n    Math.random() * xRange - xRange/2,\n    Math.random() * yRange - yRange/2,\n    0,\n  );\n\n  return {\n    position,\n    rotation: new THREE.Vector3(),\n    radius,\n    direction,\n    uuid: THREE.Math.generateUUID(),\n  };\n}\n\nexport const setupAsteroids = (count, box) => \n  Array(count)\n    .fill()\n    .map(() => createAsteroidGeometry({ box }));\n\nconst advanceAsteroids = (box, asteroids) =>\n  asteroids.map(asteroid => {\n    asteroid.rotation.z += asteroid.radius * 1/10 * Math.PI/180;\n    asteroid.position.add(asteroid.direction)\n    if (!box.containsPoint(asteroid.position)) {\n      if (asteroid.position.x > box.max.x) asteroid.position.x = box.min.x;\n      if (asteroid.position.x < box.min.x) asteroid.position.x = box.max.x;\n      if (asteroid.position.y > box.max.y) asteroid.position.y = box.min.y;\n      if (asteroid.position.y < box.min.y) asteroid.position.y = box.max.y;\n    }\n    return asteroid;\n  });\n\nexport const generateLaserbeam = ({ position, direction }) => ({\n  direction,\n  position: position,\n  uuid: THREE.Math.generateUUID(),\n});\n\nexport const makeBoundingBoxFromCamera = camera => {\n  const { top, left, bottom, right } = camera;\n\n  return new THREE.Box3(\n    new THREE.Vector3(left, bottom, 0),\n    new THREE.Vector3(right, top, 0),\n  );\n}","import useAsteroidsGame from './useAsteroidsGame';\n\nexport default useAsteroidsGame;\n","import { useThree } from '../../../ThreeJSManager';\nimport { \n  useEffect, \n  useReducer, \n  useRef,\n} from 'react'; \nimport {\n  generateLaserbeam,\n  makeBoundingBoxFromCamera,\n  proceedGame,\n  setupAsteroids,\n} from './useAsteroidsGameUtil';\n\nconst useAsteroidsGame = ({ asteroidCount }) => {\n  const {\n    scene, \n    timer, \n    camera,\n  } = useThree();\n\n  const boundingBoxRef = useRef(makeBoundingBoxFromCamera(camera));\n  \n  const [{ laserbeams, asteroids }, dispatch] = useReducer(\n    (state, action) => {\n      switch (action.type) {\n        case 'SHOOT_LASER':\n          return {\n            ...state,\n            laserbeams: [\n              ...state.laserbeams,\n              generateLaserbeam(action),\n            ],\n          };\n        case 'ADVANCE_GAME':\n          const {\n            laserbeams,\n            asteroids,\n          } = proceedGame(state);\n    \n          return {\n            ...state,\n            laserbeams,\n            asteroids,\n          };\n        default:\n          return state;\n      }\n    },\n    {\n      asteroids: setupAsteroids(asteroidCount, boundingBoxRef.current),\n      laserbeams: [],\n      scene,\n      boundingBox: boundingBoxRef.current,\n    },\n  );\n  \n  useEffect(\n    () => dispatch({\n      type: 'ADVANCE_GAME',\n    }),\n    [timer],\n  );\n  \n  return {\n    laserbeams,\n    asteroids,\n    shootLaser: (position, direction) => \n      dispatch({\n        type: 'SHOOT_LASER', \n        position, \n        direction,\n      }),\n  };\n}\n\nexport default useAsteroidsGame;\n","import * as THREE from 'three';\n\nexport const getCamera = ({ offsetWidth, offsetHeight }) => {\n  const viewSize = 150\n  const aspectRatio = offsetWidth/offsetHeight\n\tconst camera = new THREE.OrthographicCamera(\n    -aspectRatio * viewSize / 2, \n    aspectRatio * viewSize / 2,\n\t\tviewSize / 2, -viewSize / 2,\n    0,\n    1,\n  );\n  return camera;\n};\n\nexport const getRenderer = (canvas) => {\n  const context = canvas.getContext('webgl');\n  const renderer = new THREE.WebGLRenderer({\n    canvas,\n    context,\n  });\n\n  renderer.setSize(canvas.offsetWidth, canvas.offsetHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  return renderer;\n};\n\nexport const getScene = () => {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x0);\n\n  return scene;\n}\n","import React from 'react';\nimport SceneManager from '../ThreeJSManager';\nimport Spaceship from './Spaceship';\nimport Asteroid from './Asteroid';\nimport Laserbeam from './Laserbeam';\nimport useAsteroidsGame from './hooks/useAsteroidsGame';\nimport {\n  getCamera,\n  getRenderer,\n  getScene,\n} from './threeSetup';\n\nconst GameContainer = () =>\n  <SceneManager\n    getCamera={getCamera}\n    getRenderer={getRenderer}\n    getScene={getScene}\n  >\n    <Game />\n  </SceneManager>\n\nconst Game = ({ asteroidCount = 3}) => {\n  const { \n    laserbeams, \n    asteroids, \n    shootLaser,\n  } = useAsteroidsGame({ asteroidCount });\n\n  return (\n    <>\n      <Spaceship \n        shootLaser={shootLaser}\n      />\n      {\n        asteroids.map(props => (\n          <Asteroid\n            key={props.uuid} \n            {...props}\n          />\n        ))\n      }\n      {\n        laserbeams.map(props => (\n          <Laserbeam\n            key={props.uuid}\n            {...props}\n          />\n        ))\n      }\n    </>\n  );\n}\n\nexport default GameContainer;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, \n  Link,\n} from \"react-router-dom\";\nimport CubeExample from './example-cube/CubeExample';\nimport GameContainer from './example-asteroids/GameContainer';\n\nconst App = () =>\n  <Router basename={'/react-three-hook'}>\n    <>\n      <Route\n        exact \n        path='/' \n        render={() => \n          <div className='foo'>\n            <h2>Examples:</h2>\n            <div><Link to='/cube'>Cube</Link></div>\n            <div><Link to='/asteroids'>Asteroids</Link></div>\n          </div>\n        }\n        />\n      <Route\n        path=\"/cube\" \n        component={CubeExample} \n        />\n      <Route\n        path=\"/asteroids\"\n        component={GameContainer} \n        />\n    </>\n  </Router>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}